import Unit from '../units/unit';
import { Engine, Render, World as MatterWorld, Bodies, Runner, Composite } from 'matter-js';
import LevelDefinition from '../../levels/level-definition';
import * as Navmesh from 'navmesh';

export default class World {
    running: Boolean = false;
    units: Array<Unit> = [];
    engine: Engine;
    navmesh: Navmesh;
    // render: Render;    


    constructor() {
        
        this.engine = Engine.create();
        // this.render = Render.create({
        //     element: document.body,
        //     engine: this.engine
        // })

        // document.body.append(this.render.canvas);
        this.engine.world.gravity.y = 0;

        MatterWorld.add(this.engine.world, Bodies.rectangle(0, 0, 1000, 50, {isStatic: true}))

        // Engine.run(this.engine);
        // Render.run(this.render);
        let nv = [[{"y": -610.0, "x": 1000.0}, {"y": -521.07, "x": 798.73}, {"y": -538.95, "x": 253.47}], [{"y": -372.32, "x": 805.34}, {"y": -414.28, "x": 880.81}, {"y": -215.68, "x": 832.49}], [{"y": -116.61, "x": 186.45}, {"y": -113.11, "x": 755.52}, {"y": 0.0, "x": 0.0}], [{"y": -396.57, "x": 588.56}, {"y": -487.44, "x": 329.21}, {"y": -479.1, "x": 723.26}], [{"y": -610.0, "x": 1000.0}, {"y": -414.28, "x": 880.81}, {"y": -521.07, "x": 798.73}], [{"y": -521.07, "x": 798.73}, {"y": -479.1, "x": 723.26}, {"y": -538.95, "x": 253.47}], [{"y": -538.95, "x": 253.47}, {"y": -414.57, "x": 160.14}, {"y": -610.0, "x": 0.0}], [{"y": -479.1, "x": 723.26}, {"y": -487.44, "x": 329.21}, {"y": -538.95, "x": 253.47}], [{"y": -610.0, "x": 0.0}, {"y": -610.0, "x": 1000.0}, {"y": -538.95, "x": 253.47}], [{"y": -363.06, "x": 235.88}, {"y": -433.75, "x": 288.93}, {"y": -301.38, "x": 439.6}], [{"y": -433.75, "x": 288.93}, {"y": -392.75, "x": 433.11}, {"y": -301.38, "x": 439.6}], [{"y": 0.0, "x": 0.0}, {"y": -610.0, "x": 0.0}, {"y": -199.48, "x": 147.8}], [{"y": -610.0, "x": 0.0}, {"y": -414.57, "x": 160.14}, {"y": -199.48, "x": 147.8}], [{"y": -199.48, "x": 147.8}, {"y": -414.57, "x": 160.14}, {"y": -363.06, "x": 235.88}], [{"y": -238.13, "x": 230.68}, {"y": -199.48, "x": 147.8}, {"y": -363.06, "x": 235.88}], [{"y": -155.59, "x": 693.07}, {"y": -155.25, "x": 269.33}, {"y": -301.38, "x": 439.6}], [{"y": -258.16, "x": 770.03}, {"y": -155.59, "x": 693.07}, {"y": -305.2, "x": 595.06}], [{"y": -238.13, "x": 230.68}, {"y": -363.06, "x": 235.88}, {"y": -301.38, "x": 439.6}], [{"y": -305.2, "x": 595.06}, {"y": -472.45, "x": 728.37}, {"y": -372.32, "x": 805.34}], [{"y": -238.13, "x": 230.68}, {"y": -301.38, "x": 439.6}, {"y": -155.25, "x": 269.33}], [{"y": -155.59, "x": 693.07}, {"y": -301.38, "x": 439.6}, {"y": -305.2, "x": 595.06}], [{"y": -258.16, "x": 770.03}, {"y": -305.2, "x": 595.06}, {"y": -372.32, "x": 805.34}], [{"y": -610.0, "x": 1000.0}, {"y": 0.0, "x": 1000.0}, {"y": -414.28, "x": 880.81}], [{"y": -215.68, "x": 832.49}, {"y": -258.16, "x": 770.03}, {"y": -372.32, "x": 805.34}], [{"y": -414.28, "x": 880.81}, {"y": 0.0, "x": 1000.0}, {"y": -215.68, "x": 832.49}], [{"y": 0.0, "x": 0.0}, {"y": -199.48, "x": 147.8}, {"y": -116.61, "x": 186.45}], [{"y": -116.61, "x": 186.45}, {"y": -155.25, "x": 269.33}, {"y": -113.11, "x": 755.52}], [{"y": -113.11, "x": 755.52}, {"y": -215.68, "x": 832.49}, {"y": 0.0, "x": 1000.0}], [{"y": -155.25, "x": 269.33}, {"y": -155.59, "x": 693.07}, {"y": -113.11, "x": 755.52}], [{"y": 0.0, "x": 1000.0}, {"y": 0.0, "x": 0.0}, {"y": -113.11, "x": 755.52}], [{"y": -479.1, "x": 723.26}, {"y": -472.45, "x": 728.37}, {"y": -396.57, "x": 588.56}], [{"y": -396.57, "x": 588.56}, {"y": -392.75, "x": 433.11}, {"y": -487.44, "x": 329.21}], [{"y": -472.45, "x": 728.37}, {"y": -305.2, "x": 595.06}, {"y": -396.57, "x": 588.56}], [{"y": -433.75, "x": 288.93}, {"y": -487.44, "x": 329.21}, {"y": -392.75, "x": 433.11}]]

        nv.forEach( poly => {
            poly.forEach(vert => {
                vert.y *= -1;
            })
        })

        this.loadLevel({
            navmesh: nv
        })
    }

    addUnit(unit: Unit) {
        this.units.push(unit);
        unit.world = this;
        MatterWorld.add(this.engine.world, unit.body);
        return this;
    }

    step() {
        Engine.update(this.engine, 1 / 60)
        this.units.forEach(u => u.update())
    }

    clear() {
        MatterWorld.clear(this.engine.world, false);
        Engine.clear(this.engine);
    }

    loadLevel(level:LevelDefinition) {
        this.clear();
        this.navmesh = new Navmesh(level.navmesh);

    }
}

